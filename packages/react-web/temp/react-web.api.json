{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@elux/react-web!",
  "docComment": "",
  "name": "@elux/react-web",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@elux/react-web!",
      "name": "",
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!Action:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Action "
            }
          ],
          "releaseTag": "Public",
          "name": "Action",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!Action#payload:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "payload?: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!Action#priority:member",
              "docComment": "/**\n * priority属性用来设置handlers的优先处理顺序，值为moduleName[]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priority?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "priority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!Action#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ActionCreator:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ActionCreator = "
            },
            {
              "kind": "Content",
              "text": "(...args: any[]) => "
            },
            {
              "kind": "Reference",
              "text": "Action",
              "canonicalReference": "@elux/react-web!Action:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ActionCreator",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ActionsThis:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ActionsThis<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof T]: "
            },
            {
              "kind": "Reference",
              "text": "HandlerThis",
              "canonicalReference": "@elux/react-web!HandlerThis:type"
            },
            {
              "kind": "Content",
              "text": "<T[K]>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ActionsThis",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!AsyncEluxComponent:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AsyncEluxComponent = "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    default: "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncEluxComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@elux/react-web!BaseModel:class",
          "docComment": "/**\n * Model基类\n *\n * @remarks\n *\n * Model基类中提供了一些常用的方法\n *\n * - `TModuleState`: 本模块的状态结构\n *\n * - `TRouteParams`: 本模块的路由参数结构\n *\n * - `TRootState`: 全局状态结构\n *\n * @typeParam TModuleState - 本模块的状态结构\n *\n * @typeParam TRouteParams - 本模块的路由参数结构\n *\n * @typeParam TRootState - 全局状态结构\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BaseModel<TModuleState extends "
            },
            {
              "kind": "Reference",
              "text": "ModuleState",
              "canonicalReference": "@elux/react-web!ModuleState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", TRouteParams extends "
            },
            {
              "kind": "Reference",
              "text": "ModuleState",
              "canonicalReference": "@elux/react-web!ModuleState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", TRootState extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "CommonModel",
              "canonicalReference": "@elux/react-web!CommonModel:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TModuleState",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "TRouteParams",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            },
            {
              "typeParameterName": "TRootState",
              "constraintTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "defaultTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              }
            }
          ],
          "name": "BaseModel",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@elux/react-web!BaseModel:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BaseModel` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "moduleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "store",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!BaseModel#actions:member",
              "docComment": "/**\n * 获取本模块的公开actions构造器\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected get actions(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActionsThis",
                  "canonicalReference": "@elux/react-web!ActionsThis:type"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!BaseModel#defaultRouteParams:member",
              "docComment": "/**\n * 本模块的路由参数默认值\n *\n * @remarks\n *\n * 实际路由参数由`URL传值`+`默认值`deepMerge所得\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract defaultRouteParams: "
                },
                {
                  "kind": "Content",
                  "text": "TRouteParams"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultRouteParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#destroy:member(1)",
              "docComment": "/**\n * model被销毁时的hook钩子\n *\n * @remarks\n *\n * 在虚拟多页模式下，`虚拟Page`被出栈时，Page对应的Store将被destroy()，Store对应的Model实例也将被destroy()\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroy(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#dispatch:member(1)",
              "docComment": "/**\n * 等同于this.store.dispatch(action)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected dispatch(action: "
                },
                {
                  "kind": "Reference",
                  "text": "Action",
                  "canonicalReference": "@elux/react-web!Action:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "action",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "dispatch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getCurrentActionName:member(1)",
              "docComment": "/**\n * 获取当前触发的action.type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getCurrentActionName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCurrentActionName"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getLatestState:member(1)",
              "docComment": "/**\n * 获取全局的状态\n *\n * @remarks\n *\n * 以下三者都是获取全局的状态，请注意它们之间的区别：\n *\n * - {@link BaseModel.getRootState | getRootState(): TRootState}\n *\n * - {@link BaseModel.getUncommittedState | getUncommittedState(): TRootState}\n *\n * - {@link BaseModel.getLatestState | getLatestState(): TRootState}\n *\n * - `getRootState()` VS `getUncommittedState()`：RootState由多个MoudleState组成，每个Module独立维护自己的MoudleState。 当一个Action触发多个不同Module的reducer时，这些reducer将顺序执行并返回新的ModuleState。 当所有reducer执行完毕时，最后才一次性commit至store，所以在执行commit之前，通过getRootState()得到的依然是原数据，而通过getUncommittedState()得到的是实时数据。 比如：ModuleA、ModuleB 都监听了Action `stage.putUser`，ModuleA先执行了reducer并分别返回了`NewModuleAState`， 然后ModuleB执行reducer时，它想通过getRootState()获取`NewModuleAState`是无效的，因为此时`NewModuleAState`还未commit至store中，此时必须使用getUncommittedState()。 因此通过getUncommittedState()获取的RootState比getRootState()要更实时。\n *\n * - `getUncommittedState()`在MutableData模式下（如VUE）无使用的意义，因为可变数据不存在commit的事务性，它是实时修改的。\n *\n * - `getRootState()` VS `getLatestState()`：使用虚拟多页时，应用可能同时存在多个`虚拟Page`（但有且只有一个最顶层的`虚拟Page`处于激活状态）， 每个`虚拟Page`将对应一个独立的Store，每个Store都由自己独立的RootState，它们里面存储的ModuleState并不完全一样。 getRootState()只能得到自己Store的RootState，而getLatestState()得到的是多个Store合并后的RootState。 因此通过getLatestState()获取的RootState比getRootState()要更新，getLatestState()一般用于涉及跨`虚拟Page`之间的状态同步。\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getLatestState(): "
                },
                {
                  "kind": "Content",
                  "text": "TRootState"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getLatestState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getPrivateActions:member(1)",
              "docComment": "/**\n * 获取本模块的私有actions构造器\n *\n * @remarks\n *\n * 有些action并只在本Model内部调用，应当将其定义为`protected`或`private`权限，此时将无法通过`this.actions`获得其构造器\n *\n * @example\n * ```ts\n * const privateAction = this.getPrivateActions({renameUser: this.renameUser});\n * this.dispatch(privateAction.renameUser('jimmy'))\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getPrivateActions<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "Function",
                  "canonicalReference": "!Function:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ">(actionsMap: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [K in keyof T]: "
                },
                {
                  "kind": "Reference",
                  "text": "PickHandler",
                  "canonicalReference": "@elux/react-web!PickHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<T[K]>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "actionsMap",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "getPrivateActions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getRootState:member(1)",
              "docComment": "/**\n * 获取全局的状态\n *\n * @remarks\n *\n * 以下三者都是获取全局的状态，请注意它们之间的区别：\n *\n * - {@link BaseModel.getRootState | getRootState(): TRootState}\n *\n * - {@link BaseModel.getUncommittedState | getUncommittedState(): TRootState}\n *\n * - {@link BaseModel.getLatestState | getLatestState(): TRootState}\n *\n * - `getRootState()` VS `getUncommittedState()`：RootState由多个MoudleState组成，每个Module独立维护自己的MoudleState。 当一个Action触发多个不同Module的reducer时，这些reducer将顺序执行并返回新的ModuleState。 当所有reducer执行完毕时，最后才一次性commit至store，所以在执行commit之前，通过getRootState()得到的依然是原数据，而通过getUncommittedState()得到的是实时数据。 比如：ModuleA、ModuleB 都监听了Action `stage.putUser`，ModuleA先执行了reducer并分别返回了`NewModuleAState`， 然后ModuleB执行reducer时，它想通过getRootState()获取`NewModuleAState`是无效的，因为此时`NewModuleAState`还未commit至store中，此时必须使用getUncommittedState()。 因此通过getUncommittedState()获取的RootState比getRootState()要更实时。\n *\n * - `getUncommittedState()`在MutableData模式下（如VUE）无使用的意义，因为可变数据不存在commit的事务性，它是实时修改的。\n *\n * - `getRootState()` VS `getLatestState()`：使用虚拟多页时，应用可能同时存在多个`虚拟Page`（但有且只有一个最顶层的`虚拟Page`处于激活状态）， 每个`虚拟Page`将对应一个独立的Store，每个Store都由自己独立的RootState，它们里面存储的ModuleState并不完全一样。 getRootState()只能得到自己Store的RootState，而getLatestState()得到的是多个Store合并后的RootState。 因此通过getLatestState()获取的RootState比getRootState()要更新，getLatestState()一般用于涉及跨`虚拟Page`之间的状态同步。\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getRootState(): "
                },
                {
                  "kind": "Content",
                  "text": "TRootState"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getRootState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getRouteParams:member(1)",
              "docComment": "/**\n * 获取本模块当前路由参数\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getRouteParams(): "
                },
                {
                  "kind": "Content",
                  "text": "TRouteParams"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getRouteParams"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getState:member(1)",
              "docComment": "/**\n * 获取本模块的状态\n *\n * @remarks\n *\n * 此方法类是 {@link BaseModel.getRootState | getRootState(this.moduleName)} 的快捷调用\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getState(): "
                },
                {
                  "kind": "Content",
                  "text": "TModuleState"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#getUncommittedState:member(1)",
              "docComment": "/**\n * 获取全局的状态\n *\n * @remarks\n *\n * 以下三者都是获取全局的状态，请注意它们之间的区别：\n *\n * - {@link BaseModel.getRootState | getRootState(): TRootState}\n *\n * - {@link BaseModel.getUncommittedState | getUncommittedState(): TRootState}\n *\n * - {@link BaseModel.getLatestState | getLatestState(): TRootState}\n *\n * - `getRootState()` VS `getUncommittedState()`：RootState由多个MoudleState组成，每个Module独立维护自己的MoudleState。 当一个Action触发多个不同Module的reducer时，这些reducer将顺序执行并返回新的ModuleState。 当所有reducer执行完毕时，最后才一次性commit至store，所以在执行commit之前，通过getRootState()得到的依然是原数据，而通过getUncommittedState()得到的是实时数据。 比如：ModuleA、ModuleB 都监听了Action `stage.putUser`，ModuleA先执行了reducer并分别返回了`NewModuleAState`， 然后ModuleB执行reducer时，它想通过getRootState()获取`NewModuleAState`是无效的，因为此时`NewModuleAState`还未commit至store中，此时必须使用getUncommittedState()。 因此通过getUncommittedState()获取的RootState比getRootState()要更实时。\n *\n * - `getUncommittedState()`在MutableData模式下（如VUE）无使用的意义，因为可变数据不存在commit的事务性，它是实时修改的。\n *\n * - `getRootState()` VS `getLatestState()`：使用虚拟多页时，应用可能同时存在多个`虚拟Page`（但有且只有一个最顶层的`虚拟Page`处于激活状态）， 每个`虚拟Page`将对应一个独立的Store，每个Store都由自己独立的RootState，它们里面存储的ModuleState并不完全一样。 getRootState()只能得到自己Store的RootState，而getLatestState()得到的是多个Store合并后的RootState。 因此通过getLatestState()获取的RootState比getRootState()要更新，getLatestState()一般用于涉及跨`虚拟Page`之间的状态同步。\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getUncommittedState(): "
                },
                {
                  "kind": "Content",
                  "text": "TRootState"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getUncommittedState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#init:member(1)",
              "docComment": "/**\n * 获取本模块的状态初始值\n *\n * @remarks\n *\n * 模块初始化时将调用此方法获取状态初始值，同一个Store中，每个模块只会执行一次初始化。 此方法除了返回状态初始值之外，还可以执行一些其它初始化动作，如果有某些副作用，请记得在{@link BaseModel.destroy | BaseModel.destroy()}中清除\n *\n * @param latestState - 当前最新的全局状态（多个PageStore合并后的状态）\n *\n * @param preState - 提前预置的全局状态（通常用于SSR时传递脱水状态）\n *\n * @returns 返回本模块的状态初始值\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract init(latestState: "
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@elux/react-web!RootState:type"
                },
                {
                  "kind": "Content",
                  "text": ", preState: "
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@elux/react-web!RootState:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TModuleState"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "latestState",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "preState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "init"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!BaseModel#loadModel:member(1)",
              "docComment": "/**\n * 手动加载Module并初始化其Model\n *\n * @remarks\n *\n * 大部分情况下，框架将自动按需加载Module并初始化其Model，无需手动加载\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected loadModel(moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "moduleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "loadModel"
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!BaseModel#moduleName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moduleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!BaseModel#router:member",
              "docComment": "/**\n * 获取当前Router\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected get router(): "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "router",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!BaseModel#store:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 16,
              "endIndex": 18
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!CommonModel:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommonModel "
            }
          ],
          "releaseTag": "Public",
          "name": "CommonModel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModel#defaultRouteParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultRouteParams: "
                },
                {
                  "kind": "Reference",
                  "text": "ModuleState",
                  "canonicalReference": "@elux/react-web!ModuleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultRouteParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!CommonModel#destroy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroy(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "destroy"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!CommonModel#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(latestState: "
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@elux/react-web!RootState:type"
                },
                {
                  "kind": "Content",
                  "text": ", preState: "
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@elux/react-web!RootState:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ModuleState",
                  "canonicalReference": "@elux/react-web!ModuleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "latestState",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "preState",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "init"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModel#moduleName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moduleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModel#store:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!CommonModelClass:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommonModelClass<H = "
            },
            {
              "kind": "Reference",
              "text": "CommonModel",
              "canonicalReference": "@elux/react-web!CommonModel:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "H",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "CommonModelClass",
          "members": [
            {
              "kind": "ConstructSignature",
              "canonicalReference": "@elux/react-web!CommonModelClass:new(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "new (moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "H"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "moduleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "store",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!CommonModule:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CommonModule<ModuleName extends "
            },
            {
              "kind": "Content",
              "text": "string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", Store extends "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ModuleName",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "Store",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            }
          ],
          "name": "CommonModule",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#actions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actions: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [actionName: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "ActionCreator",
                  "canonicalReference": "@elux/react-web!ActionCreator:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#components:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "components: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [componentName: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "EluxComponent",
                  "canonicalReference": "@elux/react-web!EluxComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncEluxComponent",
                  "canonicalReference": "@elux/react-web!AsyncEluxComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "components",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#initModel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initModel: "
                },
                {
                  "kind": "Content",
                  "text": "(store: Store) => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initModel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#moduleName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "ModuleName"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moduleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#routeParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "routeParams: "
                },
                {
                  "kind": "Reference",
                  "text": "ModuleState",
                  "canonicalReference": "@elux/react-web!ModuleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "routeParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!CommonModule#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Reference",
                  "text": "ModuleState",
                  "canonicalReference": "@elux/react-web!ModuleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ComputedStore:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ComputedStore<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof T]-?: () => T[K];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ComputedStore",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!connectRedux:function(1)",
          "docComment": "/**\n * 连接store与react组件\n *\n * @remarks\n *\n * 参见{@link https://react-redux.js.org/api/connect | react-redux/connect}\n *\n * @param mapStateToProps - state与props之间的映射与转换\n *\n * @param options - 连接参数设置\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function connectRedux<S = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", D = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", W = "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ">(mapStateToProps?: "
            },
            {
              "kind": "Content",
              "text": "(state: any, owner: W) => S"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "Options",
              "canonicalReference": "@types/react-redux!Options:interface"
            },
            {
              "kind": "Content",
              "text": "<any, S, W>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "InferableComponentEnhancerWithProps",
              "canonicalReference": "@elux/react-web!InferableComponentEnhancerWithProps:type"
            },
            {
              "kind": "Content",
              "text": "<S & D & {\n    dispatch: "
            },
            {
              "kind": "Reference",
              "text": "Dispatch",
              "canonicalReference": "@elux/react-web!Dispatch:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "mapStateToProps",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "W",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "connectRedux"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!createApp:function(1)",
          "docComment": "/**\n * 创建应用(CSR)\n *\n * @remarks\n *\n * 应用唯一的创建入口，用于客户端渲染(CSR)，服务端渲染(SSR)请使用{@link createSSR | createSSR(...)}\n *\n * @param moduleGetter - 模块工厂\n *\n * @param storeMiddlewares - store中间件\n *\n * @param storeLogger - store日志记录器\n *\n * @returns 返回包含`render(...)`方法的下一步实例\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createApp(moduleGetter: "
            },
            {
              "kind": "Reference",
              "text": "ModuleGetter",
              "canonicalReference": "@elux/react-web!ModuleGetter:type"
            },
            {
              "kind": "Content",
              "text": ", storeMiddlewares?: "
            },
            {
              "kind": "Reference",
              "text": "StoreMiddleware",
              "canonicalReference": "@elux/react-web!StoreMiddleware:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", storeLogger?: "
            },
            {
              "kind": "Reference",
              "text": "StoreLogger",
              "canonicalReference": "@elux/react-web!StoreLogger:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    render({ id, ssrKey, viewName }?: "
            },
            {
              "kind": "Reference",
              "text": "RenderOptions",
              "canonicalReference": "@elux/react-web!RenderOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleGetter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "storeMiddlewares",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              }
            },
            {
              "parameterName": "storeLogger",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "createApp"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!createRouteModule:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createRouteModule<G extends "
            },
            {
              "kind": "Reference",
              "text": "PagenameMap",
              "canonicalReference": "@elux/react-web!PagenameMap:type"
            },
            {
              "kind": "Content",
              "text": ", N extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ">(moduleName: "
            },
            {
              "kind": "Content",
              "text": "N"
            },
            {
              "kind": "Content",
              "text": ", pagenameMap: "
            },
            {
              "kind": "Content",
              "text": "G"
            },
            {
              "kind": "Content",
              "text": ", nativeLocationMap?: "
            },
            {
              "kind": "Reference",
              "text": "NativeLocationMap",
              "canonicalReference": "@elux/react-web!NativeLocationMap:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    moduleName: N;\n    initModel: (store: import(\"@elux/core\")."
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": ">) => void | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    state: import(\"@elux/core\")."
            },
            {
              "kind": "Reference",
              "text": "ModuleState",
              "canonicalReference": "@elux/react-web!ModuleState:type"
            },
            {
              "kind": "Content",
              "text": ";\n    routeParams: import(\"@elux/core\")."
            },
            {
              "kind": "Reference",
              "text": "ModuleState",
              "canonicalReference": "@elux/react-web!ModuleState:type"
            },
            {
              "kind": "Content",
              "text": ";\n    actions: import(\"@elux/core\")."
            },
            {
              "kind": "Reference",
              "text": "PickActions",
              "canonicalReference": "@elux/react-web!PickActions:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"@elux/core\")."
            },
            {
              "kind": "Reference",
              "text": "CommonModel",
              "canonicalReference": "@elux/react-web!CommonModel:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    components: {};\n    data: keyof G;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 28
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "pagenameMap",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            },
            {
              "parameterName": "nativeLocationMap",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "G",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createRouteModule"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!createSSR:function(1)",
          "docComment": "/**\n * 创建应用(SSR)\n *\n * @remarks\n *\n * 应用唯一的创建入口，用于服务端渲染(SSR)，客户端渲染(CSR)请使用{@link createApp | createApp(...)}\n *\n * @param moduleGetter - 模块工厂\n *\n * @param url - 服务器收到的原始url\n *\n * @param nativeData - 可存放任何原始请求数据\n *\n * @param storeMiddlewares - store中间件\n *\n * @param storeLogger - store日志记录器\n *\n * @returns 返回包含`render(...)`方法的下一步实例\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSSR(moduleGetter: "
            },
            {
              "kind": "Reference",
              "text": "ModuleGetter",
              "canonicalReference": "@elux/react-web!ModuleGetter:type"
            },
            {
              "kind": "Content",
              "text": ", url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", nativeData: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", storeMiddlewares?: "
            },
            {
              "kind": "Reference",
              "text": "StoreMiddleware",
              "canonicalReference": "@elux/react-web!StoreMiddleware:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", storeLogger?: "
            },
            {
              "kind": "Reference",
              "text": "StoreLogger",
              "canonicalReference": "@elux/react-web!StoreLogger:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    render({ id, ssrKey, viewName }?: "
            },
            {
              "kind": "Reference",
              "text": "RenderOptions",
              "canonicalReference": "@elux/react-web!RenderOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 17
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleGetter",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "nativeData",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "storeMiddlewares",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            },
            {
              "parameterName": "storeLogger",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              }
            }
          ],
          "name": "createSSR"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!deepMerge:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deepMerge(target: "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ", ...args: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "deepMerge"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!DeepPartial:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DeepPartial<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof T]?: "
            },
            {
              "kind": "Reference",
              "text": "DeepPartial",
              "canonicalReference": "@elux/react-web!DeepPartial:type"
            },
            {
              "kind": "Content",
              "text": "<T[P]>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DeepPartial",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!Dispatch:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Dispatch = "
            },
            {
              "kind": "Content",
              "text": "(action: "
            },
            {
              "kind": "Reference",
              "text": "Action",
              "canonicalReference": "@elux/react-web!Action:interface"
            },
            {
              "kind": "Content",
              "text": ") => void | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Dispatch",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@elux/react-web!DocumentHead:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Reference",
              "text": "React.NamedExoticComponent",
              "canonicalReference": "@types/react!~React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DocumentHeadProps",
              "canonicalReference": "@elux/react-web!DocumentHeadProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentHead",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!DocumentHeadProps:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DocumentHeadProps "
            }
          ],
          "releaseTag": "Public",
          "name": "DocumentHeadProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!DocumentHeadProps#html:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "html?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "html",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!DocumentHeadProps#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!effect:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function effect(loadingKey?: "
            },
            {
              "kind": "Content",
              "text": "string | null"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "loadingKey",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "effect"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!effectLogger:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function effectLogger(before: "
            },
            {
              "kind": "Content",
              "text": "(action: "
            },
            {
              "kind": "Reference",
              "text": "Action",
              "canonicalReference": "@elux/react-web!Action:interface"
            },
            {
              "kind": "Content",
              "text": ", promiseResult: "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>) => void"
            },
            {
              "kind": "Content",
              "text": ", after: "
            },
            {
              "kind": "Content",
              "text": "null | ((status: 'Rejected' | 'Resolved', beforeResult: any, effectResult: any) => void)"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(target: any, key: string, descriptor: "
            },
            {
              "kind": "Reference",
              "text": "PropertyDescriptor",
              "canonicalReference": "!PropertyDescriptor:interface"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "before",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "parameterName": "after",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "name": "effectLogger"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@elux/react-web!Else:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Reference",
              "text": "React.NamedExoticComponent",
              "canonicalReference": "@types/react!~React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ElseProps",
              "canonicalReference": "@elux/react-web!ElseProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "Else",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!ElseProps:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ElseProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ElseProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!ElseProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!ElseProps#elseView:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elseView?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "elseView",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!EluxComponent:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EluxComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "EluxComponent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!EluxComponent#__elux_component__:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "__elux_component__: "
                },
                {
                  "kind": "Content",
                  "text": "'view' | 'component'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "__elux_component__",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!EluxLocation:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EluxLocation<P extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "EluxLocation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!EluxLocation#args:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "args: "
                },
                {
                  "kind": "Reference",
                  "text": "DeepPartial",
                  "canonicalReference": "@elux/react-web!DeepPartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<P>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "args",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!EluxLocation#pathmatch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pathmatch: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pathmatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@elux/react-web!EmptyModel:class",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EmptyModel implements "
            },
            {
              "kind": "Reference",
              "text": "CommonModel",
              "canonicalReference": "@elux/react-web!CommonModel:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EmptyModel",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@elux/react-web!EmptyModel:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `EmptyModel` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "moduleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "store",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!EmptyModel#defaultRouteParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultRouteParams: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultRouteParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!EmptyModel#destroy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "destroy(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@elux/react-web!EmptyModel#init:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "init(): "
                },
                {
                  "kind": "Reference",
                  "text": "ModuleState",
                  "canonicalReference": "@elux/react-web!ModuleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "init"
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!EmptyModel#initState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initState: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!EmptyModel#moduleName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moduleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@elux/react-web!EmptyModel#store:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@elux/react-web!env:var",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "env: "
            },
            {
              "kind": "Reference",
              "text": "EluxRuntime.ENV",
              "canonicalReference": "!EluxRuntime~ENV:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "env",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!errorAction:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function errorAction(error: "
            },
            {
              "kind": "Reference",
              "text": "Object",
              "canonicalReference": "!Object:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Action",
              "canonicalReference": "@elux/react-web!Action:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "error",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "errorAction"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!exportComponent:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exportComponent<T>(component: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "component",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "exportComponent"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!exportModule:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exportModule<N extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", H extends "
            },
            {
              "kind": "Reference",
              "text": "CommonModel",
              "canonicalReference": "@elux/react-web!CommonModel:interface"
            },
            {
              "kind": "Content",
              "text": ", C extends "
            },
            {
              "kind": "Content",
              "text": "{\n    [componentName: string]: "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AsyncEluxComponent",
              "canonicalReference": "@elux/react-web!AsyncEluxComponent:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ", D>(moduleName: "
            },
            {
              "kind": "Content",
              "text": "N"
            },
            {
              "kind": "Content",
              "text": ", ModelClass: "
            },
            {
              "kind": "Reference",
              "text": "CommonModelClass",
              "canonicalReference": "@elux/react-web!CommonModelClass:interface"
            },
            {
              "kind": "Content",
              "text": "<H>"
            },
            {
              "kind": "Content",
              "text": ", components: "
            },
            {
              "kind": "Content",
              "text": "C"
            },
            {
              "kind": "Content",
              "text": ", data?: "
            },
            {
              "kind": "Content",
              "text": "D"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    moduleName: N;\n    initModel: (store: "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": ") => void | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    state: "
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<H['init']>;\n    routeParams: H['defaultRouteParams'];\n    actions: "
            },
            {
              "kind": "Reference",
              "text": "PickActions",
              "canonicalReference": "@elux/react-web!PickActions:type"
            },
            {
              "kind": "Content",
              "text": "<H>;\n    components: C;\n    data: D;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 29
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            },
            {
              "parameterName": "ModelClass",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              }
            },
            {
              "parameterName": "components",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              }
            },
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 19
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "H",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "exportModule"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!exportView:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exportView<T>(component: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "component",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "exportView"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!Facade:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Facade<G extends "
            },
            {
              "kind": "Content",
              "text": "{\n    [N in "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof G, string>]: () => "
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": "<N> | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n        default: "
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": "<N>;\n    }>;\n} "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof G, string>]: "
            },
            {
              "kind": "Reference",
              "text": "ModuleAPI",
              "canonicalReference": "@elux/react-web!ModuleAPI:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GetPromiseModule",
              "canonicalReference": "@elux/react-web!GetPromiseModule:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ReturnType",
              "canonicalReference": "!ReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<G[K]>>>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Facade",
          "typeParameters": [
            {
              "typeParameterName": "G",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 13,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!FacadeActions:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FacadeActions<F extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof F, R>]: keyof F[K]['actions'];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FacadeActions",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!FacadeModules:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FacadeModules<F extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof F, R>]: "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<F[K], 'name' | 'actions' | 'actionNames'>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FacadeModules",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!FacadeRoutes:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FacadeRoutes<F extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof F, R>]?: F[K]['routeParams'];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FacadeRoutes",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!FacadeStates:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FacadeStates<F extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof F]: K extends R ? "
            },
            {
              "kind": "Reference",
              "text": "RouteState",
              "canonicalReference": "@elux/react-web!RouteState:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FacadeRoutes",
              "canonicalReference": "@elux/react-web!FacadeRoutes:type"
            },
            {
              "kind": "Content",
              "text": "<F, R>, F[R]['data']> : F[K]['state'];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FacadeStates",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!getApi:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getApi<T extends "
            },
            {
              "kind": "Content",
              "text": "{\n    State: any;\n    GetActions: any;\n    LoadComponent: any;\n    Modules: any;\n}"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Reference",
              "text": "URouter",
              "canonicalReference": "@elux/react-web!URouter:interface"
            },
            {
              "kind": "Content",
              "text": ">(demoteForProductionOnly?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", injectActions?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string[]>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<T, 'GetActions' | 'LoadComponent' | 'Modules'> & {\n    GetRouter: () => R;\n    useRouter: () => R;\n    useStore: () => "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": "<T['State'], R['routeState']['params']>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "demoteForProductionOnly",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "injectActions",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getApi"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!GetBaseFacade:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetBaseFacade<F extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": ", LoadComponentOptions, R extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    State: "
            },
            {
              "kind": "Reference",
              "text": "FacadeStates",
              "canonicalReference": "@elux/react-web!FacadeStates:type"
            },
            {
              "kind": "Content",
              "text": "<F, R>;\n    GetActions<N extends "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof F, R>>(...args: N[]): {\n        [K in N]: F[K]['actions'];\n    };\n    LoadComponent: "
            },
            {
              "kind": "Reference",
              "text": "LoadComponent",
              "canonicalReference": "@elux/react-web!LoadComponent:type"
            },
            {
              "kind": "Content",
              "text": "<F, LoadComponentOptions>;\n    Modules: "
            },
            {
              "kind": "Reference",
              "text": "FacadeModules",
              "canonicalReference": "@elux/react-web!FacadeModules:type"
            },
            {
              "kind": "Content",
              "text": "<F, R>;\n    Actions: "
            },
            {
              "kind": "Reference",
              "text": "FacadeActions",
              "canonicalReference": "@elux/react-web!FacadeActions:type"
            },
            {
              "kind": "Content",
              "text": "<F, R>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetBaseFacade",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LoadComponentOptions",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 16
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!getComponent:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getComponent(moduleName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", componentName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "componentName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "getComponent"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!GetFacade:type",
          "docComment": "/**\n * 获取应用顶级API类型\n *\n * @remarks\n *\n * - `TFacade`: 各模块接口，可通过`Facade<ModuleGetter>`获取\n *\n * - `TRouteModuleName`: 路由模块名称，默认为`route`\n *\n * @typeParam TFacade - 各模块接口，可通过`Facade<ModuleGetter>`获取\n *\n * @typeParam TRouteModuleName - 路由模块名称，默认为`route`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetFacade<TFacade extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": ", TRouteModuleName extends "
            },
            {
              "kind": "Content",
              "text": "string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "'route'"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "GetBaseFacade",
              "canonicalReference": "@elux/react-web!GetBaseFacade:type"
            },
            {
              "kind": "Content",
              "text": "<TFacade, "
            },
            {
              "kind": "Reference",
              "text": "LoadComponentOptions",
              "canonicalReference": "@elux/react-web!LoadComponentOptions:interface"
            },
            {
              "kind": "Content",
              "text": ", TRouteModuleName>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetFacade",
          "typeParameters": [
            {
              "typeParameterName": "TFacade",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TRouteModuleName",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!getModule:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getModule(moduleName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getModule"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!GetPromiseComponent:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetPromiseComponent<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends () => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    default: infer R;\n}> ? R : T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetPromiseComponent",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!GetPromiseModule:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetPromiseModule<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    default: infer R;\n}> ? R : T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetPromiseModule",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!GetProps:type",
          "docComment": "/**\n * 用于{@link connectRedux}\n *\n * @remarks\n *\n * 参见 {@link connectRedux}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GetProps<C> = "
            },
            {
              "kind": "Content",
              "text": "C extends "
            },
            {
              "kind": "Reference",
              "text": "FunctionComponent",
              "canonicalReference": "@types/react!~React.FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<infer P> ? P : C extends "
            },
            {
              "kind": "Reference",
              "text": "ComponentClass",
              "canonicalReference": "@types/react!~React.ComponentClass:interface"
            },
            {
              "kind": "Content",
              "text": "<infer P> ? P : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GetProps",
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!GetState:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GetState<RS extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "RS",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "GetState",
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "@elux/react-web!GetState:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "RS"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@elux/react-web!GetState:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "<N extends "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">(moduleName: "
                },
                {
                  "kind": "Content",
                  "text": "N"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "RS[N]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "moduleName",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "N",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!HandlerThis:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HandlerThis<T> = "
            },
            {
              "kind": "Content",
              "text": "T extends (...args: infer P) => any ? (...args: P) => {\n    type: string;\n} : undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HandlerThis",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!HistoryAction:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HistoryAction = "
            },
            {
              "kind": "Content",
              "text": "'PUSH' | 'BACK' | 'REPLACE' | 'RELAUNCH'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HistoryAction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!InferableComponentEnhancerWithProps:type",
          "docComment": "/**\n * 用于{@link connectRedux}\n *\n * @remarks\n *\n * 参见 {@link connectRedux}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InferableComponentEnhancerWithProps<TInjectedProps> = "
            },
            {
              "kind": "Content",
              "text": "<C>(component: C) => "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GetProps",
              "canonicalReference": "@elux/react-web!GetProps:type"
            },
            {
              "kind": "Content",
              "text": "<C>, keyof TInjectedProps>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InferableComponentEnhancerWithProps",
          "typeParameters": [
            {
              "typeParameterName": "TInjectedProps",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!isServer:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isServer(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "isServer"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@elux/react-web!Link:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!~React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LinkProps",
              "canonicalReference": "@elux/react-web!LinkProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!~React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLAnchorElement",
              "canonicalReference": "!HTMLAnchorElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "releaseTag": "Public",
          "name": "Link",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!LinkProps:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LinkProps extends "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!~React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "LinkProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LinkProps#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action?: "
                },
                {
                  "kind": "Content",
                  "text": "'push' | 'replace' | 'relaunch'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LinkProps#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LinkProps#href:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "href?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "href",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!LinkProps#onClick:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick?(event: "
                },
                {
                  "kind": "Reference",
                  "text": "React.MouseEvent",
                  "canonicalReference": "@types/react!~React.MouseEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "onClick"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LinkProps#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LinkProps#route:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "route?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "route",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!LoadComponent:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoadComponent<F extends "
            },
            {
              "kind": "Reference",
              "text": "Facade",
              "canonicalReference": "@elux/react-web!Facade:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", O = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "<M extends keyof F, V extends keyof F[M]['components']>(moduleName: M, componentName: V, options?: O) => F[M]['components'][V]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoadComponent",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!LoadComponentOptions:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LoadComponentOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "LoadComponentOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LoadComponentOptions#OnError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OnError?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType",
                  "canonicalReference": "@types/react!~React.ComponentType:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        message: string;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "OnError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!LoadComponentOptions#OnLoading:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OnLoading?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType",
                  "canonicalReference": "@types/react!~React.ComponentType:type"
                },
                {
                  "kind": "Content",
                  "text": "<{}>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "OnLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@elux/react-web!LoadingState:enum",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum LoadingState "
            }
          ],
          "releaseTag": "Public",
          "name": "LoadingState",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@elux/react-web!LoadingState.Depth:member",
              "docComment": "/**\n * 开始深度加载，对于加载时间超过setLoadingDepthTime设置值时将转为深度加载状态\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Depth = "
                },
                {
                  "kind": "Content",
                  "text": "\"Depth\""
                }
              ],
              "releaseTag": "Public",
              "name": "Depth",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@elux/react-web!LoadingState.Start:member",
              "docComment": "/**\n * 开始加载.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Start = "
                },
                {
                  "kind": "Content",
                  "text": "\"Start\""
                }
              ],
              "releaseTag": "Public",
              "name": "Start",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@elux/react-web!LoadingState.Stop:member",
              "docComment": "/**\n * 加载完成.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Stop = "
                },
                {
                  "kind": "Content",
                  "text": "\"Stop\""
                }
              ],
              "releaseTag": "Public",
              "name": "Stop",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!loadModel:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loadModel<MG extends "
            },
            {
              "kind": "Reference",
              "text": "ModuleGetter",
              "canonicalReference": "@elux/react-web!ModuleGetter:type"
            },
            {
              "kind": "Content",
              "text": ">(moduleName: "
            },
            {
              "kind": "Content",
              "text": "keyof MG"
            },
            {
              "kind": "Content",
              "text": ", store: "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "store",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "MG",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "loadModel"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!location:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function location(dataOrUrl: "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "EluxLocation",
              "canonicalReference": "@elux/react-web!EluxLocation:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StateLocation",
              "canonicalReference": "@elux/react-web!StateLocation:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NativeLocation",
              "canonicalReference": "@elux/react-web!NativeLocation:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ULocationTransform",
              "canonicalReference": "@elux/react-web!ULocationTransform:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dataOrUrl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "name": "location"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!modelHotReplacement:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function modelHotReplacement(moduleName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", ModelClass: "
            },
            {
              "kind": "Reference",
              "text": "CommonModelClass",
              "canonicalReference": "@elux/react-web!CommonModelClass:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "ModelClass",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "modelHotReplacement"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ModuleAPI:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ModuleAPI<M extends "
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    components: "
            },
            {
              "kind": "Reference",
              "text": "ReturnComponents",
              "canonicalReference": "@elux/react-web!ReturnComponents:type"
            },
            {
              "kind": "Content",
              "text": "<M['components']>;\n    state: M['state'];\n    actions: M['actions'];\n    actionNames: {\n        [K in keyof M['actions']]: string;\n    };\n    routeParams: M['routeParams'];\n    data: M['data'];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ModuleAPI",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ModuleGetter:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ModuleGetter = "
            },
            {
              "kind": "Content",
              "text": "{\n    [moduleName: string]: () => "
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n        default: "
            },
            {
              "kind": "Reference",
              "text": "CommonModule",
              "canonicalReference": "@elux/react-web!CommonModule:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    }>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ModuleGetter",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ModuleState:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ModuleState = "
            },
            {
              "kind": "Content",
              "text": "{\n    [key: string]: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ModuleState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!NativeLocation:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NativeLocation "
            }
          ],
          "releaseTag": "Public",
          "name": "NativeLocation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!NativeLocation#pathname:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pathname: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pathname",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!NativeLocation#query:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "query",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!NativeLocationMap:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NativeLocationMap "
            }
          ],
          "releaseTag": "Public",
          "name": "NativeLocationMap",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!NativeLocationMap#in:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "in(nativeLocation: "
                },
                {
                  "kind": "Reference",
                  "text": "NativeLocation",
                  "canonicalReference": "@elux/react-web!NativeLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "EluxLocation",
                  "canonicalReference": "@elux/react-web!EluxLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nativeLocation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "in"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!NativeLocationMap#out:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "out(eluxLocation: "
                },
                {
                  "kind": "Reference",
                  "text": "EluxLocation",
                  "canonicalReference": "@elux/react-web!EluxLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NativeLocation",
                  "canonicalReference": "@elux/react-web!NativeLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "eluxLocation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "out"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!PagenameMap:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PagenameMap<P extends "
            },
            {
              "kind": "Content",
              "text": "string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in P]: {\n        pathToParams(pathArgs: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string | undefined>): "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>;\n        paramsToPath(params: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>): "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string | undefined>;\n        pageData?: any;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PagenameMap",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 14
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!patchActions:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function patchActions(typeName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", json?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "typeName",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "json",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "patchActions"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!PickActions:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PickActions<T> = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    [K in keyof T]: "
            },
            {
              "kind": "Reference",
              "text": "PickHandler",
              "canonicalReference": "@elux/react-web!PickHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T[K]>;\n}, {\n    [K in keyof T]: T[K] extends "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": " ? "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<K, 'destroy' | 'init'> : never;\n}[keyof T]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PickActions",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!PickHandler:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PickHandler<F> = "
            },
            {
              "kind": "Content",
              "text": "F extends (...args: infer P) => any ? (...args: P) => {\n    type: string;\n} : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PickHandler",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!reducer:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function reducer(target: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", descriptor: "
            },
            {
              "kind": "Reference",
              "text": "PropertyDescriptor",
              "canonicalReference": "!PropertyDescriptor:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "parameterName": "descriptor",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "reducer"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!RenderOptions:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RenderOptions "
            }
          ],
          "releaseTag": "Public",
          "name": "RenderOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RenderOptions#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RenderOptions#ssrKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ssrKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ssrKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RenderOptions#viewName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "viewName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "viewName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!ReturnComponents:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ReturnComponents<CS extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": " | (() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    default: "
            },
            {
              "kind": "Reference",
              "text": "EluxComponent",
              "canonicalReference": "@elux/react-web!EluxComponent:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>)>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [K in keyof CS]: "
            },
            {
              "kind": "Reference",
              "text": "GetPromiseComponent",
              "canonicalReference": "@elux/react-web!GetPromiseComponent:type"
            },
            {
              "kind": "Content",
              "text": "<CS[K]>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReturnComponents",
          "typeParameters": [
            {
              "typeParameterName": "CS",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 10,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!RootState:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RootState = "
            },
            {
              "kind": "Content",
              "text": "{\n    [moduleName: string]: "
            },
            {
              "kind": "Reference",
              "text": "ModuleState",
              "canonicalReference": "@elux/react-web!ModuleState:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RootState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!RouteState:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RouteState<P extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": ", N extends "
            },
            {
              "kind": "Content",
              "text": "string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            }
          ],
          "name": "RouteState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RouteState#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action: "
                },
                {
                  "kind": "Reference",
                  "text": "HistoryAction",
                  "canonicalReference": "@elux/react-web!HistoryAction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RouteState#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RouteState#pagename:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pagename: "
                },
                {
                  "kind": "Content",
                  "text": "N"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pagename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!RouteState#params:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params: "
                },
                {
                  "kind": "Content",
                  "text": "P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!safeJsonParse:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function safeJsonParse(json: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "json",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "safeJsonParse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!setConfig:function(1)",
          "docComment": "/**\n * 全局参数设置\n *\n * @remarks\n *\n * 必须放在初始化最前面，通常没必要也不支持二次修改\n *\n * - UserConfig：{@link UserConfig | UserConfig}\n *\n * - LoadComponentOnError：用于LoadComponent(...)，组件加载失败时的显示组件，此设置为全局默认，LoadComponent方法中可以单独设置\n *\n * - LoadComponentOnLoading：用于LoadComponent(...)，组件加载中的Loading组件，此设置为全局默认，LoadComponent方法中可以单独设置\n *\n * @param conf - 全局参数\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setConfig(conf: "
            },
            {
              "kind": "Reference",
              "text": "UserConfig",
              "canonicalReference": "@elux/react-web!UserConfig:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    LoadComponentOnError?: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        message: string;\n    }>;\n    LoadComponentOnLoading?: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!~React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{}>;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "conf",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "name": "setConfig"
        },
        {
          "kind": "Function",
          "canonicalReference": "@elux/react-web!setLoading:function(1)",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setLoading<T extends "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ">(store: "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": ", item: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", moduleName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", groupName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "store",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "parameterName": "item",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            },
            {
              "parameterName": "moduleName",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            },
            {
              "parameterName": "groupName",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "setLoading"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!StateLocation:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StateLocation<P extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": ", N extends "
            },
            {
              "kind": "Content",
              "text": "string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "N",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              }
            }
          ],
          "name": "StateLocation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!StateLocation#pagename:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pagename: "
                },
                {
                  "kind": "Content",
                  "text": "N"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pagename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!StateLocation#payload:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "payload: "
                },
                {
                  "kind": "Reference",
                  "text": "DeepPartial",
                  "canonicalReference": "@elux/react-web!DeepPartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<P>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!StoreLogger:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StoreLogger = "
            },
            {
              "kind": "Content",
              "text": "({ id, isActive }: {\n    id: number;\n    isActive: boolean;\n}, actionName: string, payload: any[], priority: string[], handers: string[], state: {\n    [moduleName: string]: any;\n}, effect: boolean) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StoreLogger",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!StoreMiddleware:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StoreMiddleware = "
            },
            {
              "kind": "Content",
              "text": "(api: {\n    getStore: () => "
            },
            {
              "kind": "Reference",
              "text": "UStore",
              "canonicalReference": "@elux/react-web!UStore:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    dispatch: "
            },
            {
              "kind": "Reference",
              "text": "Dispatch",
              "canonicalReference": "@elux/react-web!Dispatch:type"
            },
            {
              "kind": "Content",
              "text": ";\n}) => (next: "
            },
            {
              "kind": "Reference",
              "text": "Dispatch",
              "canonicalReference": "@elux/react-web!Dispatch:type"
            },
            {
              "kind": "Content",
              "text": ") => (action: "
            },
            {
              "kind": "Reference",
              "text": "Action",
              "canonicalReference": "@elux/react-web!Action:interface"
            },
            {
              "kind": "Content",
              "text": ") => void | "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StoreMiddleware",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@elux/react-web!Switch:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: "
            },
            {
              "kind": "Reference",
              "text": "React.NamedExoticComponent",
              "canonicalReference": "@types/react!~React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SwitchProps",
              "canonicalReference": "@elux/react-web!SwitchProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "releaseTag": "Public",
          "name": "Switch",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!SwitchProps:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SwitchProps "
            }
          ],
          "releaseTag": "Public",
          "name": "SwitchProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!SwitchProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!SwitchProps#elseView:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elseView?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!~React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "elseView",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!UHistoryRecord:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UHistoryRecord "
            }
          ],
          "releaseTag": "Public",
          "name": "UHistoryRecord",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UHistoryRecord#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UHistoryRecord#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "ULocationTransform",
                  "canonicalReference": "@elux/react-web!ULocationTransform:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!ULocationTransform:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ULocationTransform "
            }
          ],
          "releaseTag": "Public",
          "name": "ULocationTransform",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!ULocationTransform#getEluxUrl:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEluxUrl(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getEluxUrl"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!ULocationTransform#getNativeUrl:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNativeUrl(withoutProtocol?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "withoutProtocol",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getNativeUrl"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!ULocationTransform#getPagename:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPagename(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getPagename"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!ULocationTransform#getParams:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getParams(): "
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@elux/react-web!RootState:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@elux/react-web!RootState:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getParams"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@elux/react-web!UNListener:type",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UNListener = "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UNListener",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!URouter:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface URouter<S extends "
            },
            {
              "kind": "Reference",
              "text": "RouteState",
              "canonicalReference": "@elux/react-web!RouteState:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RouteState",
              "canonicalReference": "@elux/react-web!RouteState:interface"
            },
            {
              "kind": "Content",
              "text": ", T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "name": "URouter",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#addListener:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addListener(name: "
                },
                {
                  "kind": "Content",
                  "text": "'change'"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "(data: {\n        routeState: "
                },
                {
                  "kind": "Reference",
                  "text": "RouteState",
                  "canonicalReference": "@elux/react-web!RouteState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        root: boolean;\n    }) => void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UNListener",
                  "canonicalReference": "@elux/react-web!UNListener:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  }
                }
              ],
              "name": "addListener"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#back:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "back(stepOrKey?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ", root?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        overflowRedirect?: string;\n        payload?: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", nonblocking?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "stepOrKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "root",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                },
                {
                  "parameterName": "nonblocking",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ],
              "name": "back"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#extendCurrent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extendCurrent(params: "
                },
                {
                  "kind": "Reference",
                  "text": "DeepPartial",
                  "canonicalReference": "@elux/react-web!DeepPartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<S['params']>"
                },
                {
                  "kind": "Content",
                  "text": ", pagename?: "
                },
                {
                  "kind": "Content",
                  "text": "S['pagename']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StateLocation",
                  "canonicalReference": "@elux/react-web!StateLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params'], S['pagename']>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "pagename",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "extendCurrent"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#findRecordByKey:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findRecordByKey(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        record: "
                },
                {
                  "kind": "Reference",
                  "text": "UHistoryRecord",
                  "canonicalReference": "@elux/react-web!UHistoryRecord:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        overflow: boolean;\n        index: [number, number];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "findRecordByKey"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#findRecordByStep:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findRecordByStep(delta: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", rootOnly: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        record: "
                },
                {
                  "kind": "Reference",
                  "text": "UHistoryRecord",
                  "canonicalReference": "@elux/react-web!UHistoryRecord:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        overflow: boolean;\n        index: [number, number];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "delta",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "rootOnly",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "findRecordByStep"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#getCurrentPages:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPages(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        pagename: string;\n        store: "
                },
                {
                  "kind": "Reference",
                  "text": "UStore",
                  "canonicalReference": "@elux/react-web!UStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        pageData?: any;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCurrentPages"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#getHistoryLength:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHistoryLength(root?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "root",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getHistoryLength"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!URouter#initialize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialize: "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RouteState",
                  "canonicalReference": "@elux/react-web!RouteState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!URouter#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "ULocationTransform",
                  "canonicalReference": "@elux/react-web!ULocationTransform:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!URouter#nativeData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nativeData: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nativeData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#push:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "push(dataOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "EluxLocation",
                  "canonicalReference": "@elux/react-web!EluxLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params']> | "
                },
                {
                  "kind": "Reference",
                  "text": "StateLocation",
                  "canonicalReference": "@elux/react-web!StateLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params'], S['pagename']> | "
                },
                {
                  "kind": "Reference",
                  "text": "NativeLocation",
                  "canonicalReference": "@elux/react-web!NativeLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ", root?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", nonblocking?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "root",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "nonblocking",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "name": "push"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#relaunch:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relaunch(dataOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "EluxLocation",
                  "canonicalReference": "@elux/react-web!EluxLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params']> | "
                },
                {
                  "kind": "Reference",
                  "text": "StateLocation",
                  "canonicalReference": "@elux/react-web!StateLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params'], S['pagename']> | "
                },
                {
                  "kind": "Reference",
                  "text": "NativeLocation",
                  "canonicalReference": "@elux/react-web!NativeLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ", root?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", nonblocking?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "root",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "nonblocking",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "name": "relaunch"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!URouter#replace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replace(dataOrUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "EluxLocation",
                  "canonicalReference": "@elux/react-web!EluxLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params']> | "
                },
                {
                  "kind": "Reference",
                  "text": "StateLocation",
                  "canonicalReference": "@elux/react-web!StateLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": "<S['params'], S['pagename']> | "
                },
                {
                  "kind": "Reference",
                  "text": "NativeLocation",
                  "canonicalReference": "@elux/react-web!NativeLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ", root?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", nonblocking?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dataOrUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "root",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "nonblocking",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  }
                }
              ],
              "name": "replace"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!URouter#routeState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "routeState: "
                },
                {
                  "kind": "Content",
                  "text": "S"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "routeState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!UserConfig:interface",
          "docComment": "/**\n * 全局参数设置\n *\n * @remarks\n *\n * 通常使用默认设置即可\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UserConfig "
            }
          ],
          "releaseTag": "Public",
          "name": "UserConfig",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#AppModuleName:member",
              "docComment": "/**\n * APP根模块名称\n *\n * @remarks\n *\n * 默认: `stage`\n *\n * APP根模块名称，通常约定为stage\n *\n * @defaultValue\n *\n * `stage`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AppModuleName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "AppModuleName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#DepthTimeOnLoading:member",
              "docComment": "/**\n * 超过多少秒Loading视为深度加载\n *\n * @remarks\n *\n * 默认: `2`\n *\n * 框架将Loading状态分为3种：{@link LoadingState | LoadingState}，可根据不同的状态来个性化显示，如：浅度loading时仅显示icon图标，深度loading时显示icon图标+灰色蒙层\n *\n * @defaultValue\n *\n * `2`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DepthTimeOnLoading?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "DepthTimeOnLoading",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#disableNativeRouter:member",
              "docComment": "/**\n * 不通知原生路由\n *\n * @remarks\n *\n * 默认: `false`\n *\n * 框架有自己的路由体系，运行平台的原生路由体系作为外挂模式存在。默认情况下二者之间会建立关联，此设置为true可以彻底忽略原生路由体系。\n *\n * @defaultValue\n *\n * `false`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableNativeRouter?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "disableNativeRouter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#indexUrl:member",
              "docComment": "/**\n * 设置应用的首页路由\n *\n * @remarks\n *\n * 默认: `/index`\n *\n * 当调用路由Router.back(...)回退时，如果回退步数溢出（超出历史记录数），默认使用此路由回到应用首页。\n *\n * Router.back(...)中可以单独设置，参见 {@link URouter.back | URouter.back()}\n *\n * @defaultValue\n *\n * `/index`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "indexUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#maxHistory:member",
              "docComment": "/**\n * 最大历史记录栈数\n *\n * @remarks\n *\n * 默认: `10`\n *\n * 此数值也表示可能同时存在的历史Page数量，设置过大可能导致页面Dom过多\n *\n * @defaultValue\n *\n * `10`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxHistory?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxHistory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#maxLocationCache:member",
              "docComment": "/**\n * 最大路由转换缓存数\n *\n * @remarks\n *\n * 默认: `服务器环境(SSR)：10000; 浏览器环境(CSR): 500`\n *\n * 由于elux中存在3种路由协议：eluxUrl [`e://...`]，nativeUrl [`n://...`]，stateUrl [`s://...`]，为了提高路由协议之间相互转换的性能（尤其是在SSR时，存在大量重复路由协议转换），框架做了缓存，此项目设置最大缓存数量\n *\n * @defaultValue\n *\n * `SSR：10000; CSR: 500`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxLocationCache?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "maxLocationCache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#notfoundPagename:member",
              "docComment": "/**\n * 应用默认的404 Pagename\n *\n * @remarks\n *\n * 默认: `/404`\n *\n * 未找到页面时默认使用该Pagename替代。\n *\n * @defaultValue\n *\n * `/404`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notfoundPagename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "notfoundPagename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UserConfig#paramsKey:member",
              "docComment": "/**\n * 序列化路由参数key名\n *\n * @remarks\n *\n * 默认: `_`\n *\n * 框架将路由参数序列化为string后，作为该key的value存入url，如：/index?`_`=`{...}`\n *\n * @defaultValue\n *\n * `_`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paramsKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "paramsKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@elux/react-web!UStore:interface",
          "docComment": "/**\n * *\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UStore<RS extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": ", PS extends "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "RootState",
              "canonicalReference": "@elux/react-web!RootState:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "RS",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "PS",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "name": "UStore",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UStore#dispatch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispatch: "
                },
                {
                  "kind": "Reference",
                  "text": "Dispatch",
                  "canonicalReference": "@elux/react-web!Dispatch:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dispatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UStore#getRouteParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRouteParams: "
                },
                {
                  "kind": "Reference",
                  "text": "GetState",
                  "canonicalReference": "@elux/react-web!GetState:interface"
                },
                {
                  "kind": "Content",
                  "text": "<PS>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getRouteParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UStore#getState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getState: "
                },
                {
                  "kind": "Reference",
                  "text": "GetState",
                  "canonicalReference": "@elux/react-web!GetState:interface"
                },
                {
                  "kind": "Content",
                  "text": "<RS>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!UStore#isActive:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isActive(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isActive"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@elux/react-web!UStore#sid:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sid: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@elux/react-web!UStore#subscribe:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subscribe(listener: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UNListener",
                  "canonicalReference": "@elux/react-web!UNListener:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "listener",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "subscribe"
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
